rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /projects/{projectId} {
    	function isOwner() {
      	return get(/databases/$(database)/documents/projects/$(projectId)).data.owner == request.auth.uid;
      }

			function canRead() {
      	return get(/databases/$(database)/documents/projects/$(projectId)/members/$(request.auth.uid)).data.read;
      }
			function canWrite() {
      	return get(/databases/$(database)/documents/projects/$(projectId)/members/$(request.auth.uid)).data.write;
      }

      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid != null && (isOwner() || canWrite());

      match /{documentPath=**} {
         allow read: if request.auth.uid != null && (isOwner() || canRead());
      }

      match /items/{itemId} {
      	allow write: if request.auth.uid != null && (isOwner() || canWrite());

        match /prices/{priceId} {
          allow write: if request.auth.uid != null && (isOwner() || canWrite());
        }
      }

      match /members/{uid} {
      	allow write: if request.auth.uid != null && (isOwner() || canWrite());
      }
    }

    match /users/{uid} {
    	allow read: if request.auth.uid != null;
      allow write: if request.auth.uid == uid
    }
  }
}
